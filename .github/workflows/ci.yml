name: CI Pipeline

on:
  push:
    branches:
      - main
      - ui/explore
  pull_request:
    branches:
      - main

jobs:
  laravel:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: booklink
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, dom, fileinfo, mysql, sqlite, curl, gd, intl, json, pdo, pdo_mysql, pdo_sqlite, session, tokenizer, xml, ctype, iconv, bcmath, openssl, pcntl, posix, sockets, sodium, exif, zip, redis
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Check if .env.example exists
        id: check-env
        run: |
          if [ -f .env.example ]; then
            echo "env_exists=true" >> $GITHUB_OUTPUT
          else
            echo "env_exists=false" >> $GITHUB_OUTPUT
            echo "Error: .env.example file is missing!"
            exit 1
          fi

      - name: Copy .env.example to .env
        if: steps.check-env.outputs.env_exists == 'true'
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Set up environment variables
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=booklink" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env


  react:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        run: npm install
        working-directory: ./frontend

      - name: Run ESLint
        run: npm run lint
        working-directory: ./frontend



      - name: Build React application
        run: npm run build
        working-directory: ./frontend